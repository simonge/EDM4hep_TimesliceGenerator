name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/eic/eic_xl:nightly
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup EIC Environment
        run: |
          echo "=== Setting up EIC environment ==="
          
          # Ensure /usr/local/bin is in PATH for cmake
          export PATH="/usr/local/bin:$PATH"
          
          # Check if cmake is available now
          which cmake && cmake --version || echo "CMAKE STILL NOT FOUND"
          
          # Source the EIC environment setup scripts
          echo "=== Sourcing EIC environment scripts ==="
          if [ -f "/opt/detector/setup.sh" ]; then
            echo "Sourcing /opt/detector/setup.sh"
            source /opt/detector/setup.sh
          else
            echo "/opt/detector/setup.sh not found"
          fi
          
          if [ -f "/opt/software/setup.sh" ]; then
            echo "Sourcing /opt/software/setup.sh"
            source /opt/software/setup.sh
          else
            echo "/opt/software/setup.sh not found"
          fi
          
          # Look for ROOT setup in multiple locations
          if [ -f "/usr/local/bin/thisroot.sh" ]; then
            echo "Sourcing ROOT from /usr/local/bin/thisroot.sh"
            source /usr/local/bin/thisroot.sh
          elif [ -f "/opt/root/bin/thisroot.sh" ]; then
            echo "Sourcing ROOT from /opt/root/bin/thisroot.sh"  
            source /opt/root/bin/thisroot.sh
          elif [ -f "/usr/local/root/bin/thisroot.sh" ]; then
            echo "Sourcing ROOT from /usr/local/root/bin/thisroot.sh"
            source /usr/local/root/bin/thisroot.sh
          else
            echo "ROOT setup not found in standard locations"
          fi
          
          # Set up EIC environment paths
          export CMAKE_PREFIX_PATH="/usr/local:/opt/detector:/opt/software:$CMAKE_PREFIX_PATH"
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/opt/detector/lib/pkgconfig:/opt/software/lib/pkgconfig:$PKG_CONFIG_PATH"
          export LD_LIBRARY_PATH="/usr/local/lib:/usr/local/lib64:/opt/detector/lib:/opt/software/lib:$LD_LIBRARY_PATH"
          
          # Print environment for debugging
          echo "=== Environment after setup ==="
          echo "PATH: $PATH"
          echo "CMAKE_PREFIX_PATH: $CMAKE_PREFIX_PATH"
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
          
          # Search comprehensively for podio and edm4hep
          echo "=== Comprehensive search for packages ==="
          echo "Searching /usr/local:"
          find /usr/local -name "*podio*" -o -name "*edm4hep*" 2>/dev/null | head -10 || echo "No podio/edm4hep found in /usr/local"
          echo "Searching /opt:"
          find /opt -maxdepth 4 -name "*podio*" -o -name "*edm4hep*" 2>/dev/null | head -10 || echo "No podio/edm4hep found in /opt"
          echo "Searching /usr:"
          find /usr -name "*podio*" -o -name "*edm4hep*" 2>/dev/null | head -10 || echo "No podio/edm4hep found in /usr"
          
          # Check for CMake configuration files
          echo "=== Searching for CMake config files ==="
          find /usr -name "*podio*.cmake" -o -name "*EDM4HEP*.cmake" 2>/dev/null | head -10 || echo "No CMake config files found in /usr"
          find /opt -name "*podio*.cmake" -o -name "*EDM4HEP*.cmake" 2>/dev/null | head -10 || echo "No CMake config files found in /opt"
          
          # Check for pkg-config files
          echo "=== Searching for pkg-config files ==="
          find /usr -name "*podio*.pc" -o -name "*edm4hep*.pc" 2>/dev/null | head -10 || echo "No pkg-config files found"
          
          # Save environment for next steps
          echo "PATH=/usr/local/bin:$PATH" >> $GITHUB_ENV
          echo "CMAKE_PREFIX_PATH=/usr/local:/opt/detector:/opt/software:$CMAKE_PREFIX_PATH" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/opt/detector/lib/pkgconfig:/opt/software/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:/opt/detector/lib:/opt/software/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Configure
        run: |
          echo "=== Configuring with cmake ==="
          echo "Using cmake at: $(which cmake)"
          cmake --version
          echo "CMAKE_PREFIX_PATH: $CMAKE_PREFIX_PATH"
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH" 
          echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
          
          echo "Configuring project..."
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: Build
        run: |
          echo "=== Building project ==="
          echo "Using cmake at: $(which cmake)"
          cmake --build build -j"$(nproc)" --verbose

      - name: Test
        run: |
          echo "=== Running tests ==="
          ctest --test-dir build --output-on-failure